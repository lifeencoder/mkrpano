<krpano>
	<!-- Side Menu v1.0 (by Umalo) -->

	<menu_settings background_width       ="200"
	               background_x           ="-200"
	               background_y           ="0"
                   
                   m_width       ="480"
				   m_mobile      ="288"
                   menu_width    ="260"
	               info_width    ="255"
	               main_menu_w   ="260"
                   caption_w     ="152"
                 
                   
	               menu_transparency      ="0.5"
	               menu_max_number_objects="5"
	               menu_bgcolor           ="0xffffff"
	               menu_0_text_x_start    ="0"
	               menu_0_text_y_start    ="20"
	               menu_0_text_y_step     ="30"
	               row_height             ="30"
	               menu_0_parent          ="menu_background"
	               menu_0_parent_x        ="0"
	               menu_0_parent_y        ="0"
	               menu_0_onover_color_bcg="0xd3d3d3"
	               menu_0_onout_color_bcg ="0x000000"
	               arrow_right_offset     ="20"
	               arrow_upper_offset     ="15"
	               line_upper_offset      ="15"
	               line_height            ="2"
	               line_transparency      ="0.4"
	               x_right_offset         ="20"
	               x_scale                ="0.8"
	               btn_back_x             ="0"
	               btn_back_y             ="0"
	               btn_back_scale         ="1"
	               btn_back_rotate        ="0"
	               btn_back_left_offset   ="0"
	               btn_back_upper_offset  ="0"
	               btn_menu_height        ="72"
                   
                   m_back_x             ="0"
	               m_back_y             ="0"
	               m_back_scale         ="1.3"
	               m_back_rotate        ="90"
	               m_back_left_offset   ="30"
	               m_back_upper_offset  ="50"
	               m_menu_height        ="72"
                   
                   
	               logo_width             ="150"
	               logo_transparency      ="0.3"
	               />
<!--gui_menu/logo.png-->
	
   
    
    
    
    
    
<!--
	<plugin name="menu_background"  keep="true" type="container" align="left" height="15%" zorder="4"
	        onloaded="set(width,get(menu_settings.background_width));set(bgalpha,get(menu_settings.menu_transparency));set(bgcolor,get(menu_settings.menu_bgcolor));set(x,get(menu_settings.background_x));set(y,get(menu_settings.background_y));"
	        />
-->
    
    
    
    
    

<!--
	<plugin name="submenu_x" url="%FIRSTXML%/gui_menu/x.png" keep="true" align="topleft" edge="topleft" visible="false" zorder="10"
	        parent="menu_background"
	        onloaded="
	        	set(x_x,get(menu_settings.background_width));
	        	dec(x_x,get(menu_settings.x_right_offset));
	        	set(x,get(x_x));
	        	set(x_y,get(menu_settings.menu_0_text_y_start));
	        	inc(x_y,get(menu_settings.arrow_upper_offset));
	        	dec(x_y,get(menu_settings.row_height));
	        	set(y,get(x_y));
	        	set(scale,get(menu_settings.x_scale));
	        	set(visible,true);
	        	set(plugin[submenu_x].onclick, switch_menu(0); slide_menu_left(); );
	        	"
	        />
-->

<!--
	<plugin name="submenu_back" url="%FIRSTXML%/gui_menu/arrow.png" keep="true" align="topleft" edge="topleft" visible="false" zorder="10"
	        parent="menu_background"
	        onloaded="
	        	set(back_x,get(menu_settings.btn_back_x));
	        	inc(back_x,get(menu_settings.btn_back_left_offset));
	        	set(x,get(back_x));
	        	set(back_y,get(menu_settings.menu_0_text_y_start));
	        	dec(back_y,get(menu_settings.row_height));
	        	dec(back_y,get(menu_settings.btn_back_upper_offset));
	        	set(y,get(back_y));
	        	set(scale,get(menu_settings.btn_back_scale));
	        	set(rotate,get(menu_settings.btn_back_rotate));
	        	set(plugin[submenu_back].onclick, switch_menu(0); );
	        	"
	        />
-->
    
<!--
	<plugin name="btn_menu" url="%FIRSTXML%/gui_menu/btn_menu.png" keep="true" align="righttop" edge="left" visible="true" zorder="1" parent="menu_background" oy="36"
	        onloaded=""
            onclick="slide_menu_right();"
	        />	        
    
<plugin name="btn_menu_overlay" url="%FIRSTXML%/gui_menu/btn_menu.png" keep="true" align="righttop" edge="left" visible="false" zorder="1" parent="menu_background" oy="36"
	        onloaded=""
        onclick="slide_menu_left();"
	        />	            
-->



<!--
	<action name="switch_menu">
		clean_menu();
		ifnot(%1==0,set(plugin[submenu_back].visible,true);,set(plugin[submenu_back].visible,false););
		txtadd(level,'level_',%1);
		for(set(i,1), i LE group[get(level)].group.count, inc(i),
			txtadd(menu_0,'menu_',get(i));  txtadd(object_0_html,'object_',get(i));
			set(plugin[%menu_0].html,get(group[get(level)].group[get(object_0_html)].value));
			set(plugin[%menu_0].css,font-family:Arial; font-size:11px; color:#000000; text-align:left; font-weight:bold);
			set(plugin[%menu_0].onover,set(backgroundcolor, get(menu_settings.menu_0_onover_color_bcg)); set(backgroundalpha,1);set(css,font-family:Arial; font-size:11px; color:#ffffff; text-align:left; font-weight:bold););
			set(plugin[%menu_0].onout,set(backgroundcolor, get(menu_settings.menu_0_onout_color_bcg)); set(backgroundalpha,0);set(css,font-family:Arial; font-size:11px; color:#000000; text-align:left; font-weight:bold););
			set(plugin[%menu_0].onclick,get(group[get(level)].group[get(object_0_html)].link));
			set(plugin[%menu_0].handcursor,true);
			set(plugin[%menu_0].background,true);
			set(plugin[%menu_0].visible,true);
		);
		define_lines(%1);
		define_arrow(%1);
	</action>
-->

<!--
	<action name="define_arrow">
		txtadd(level,'level_',%1);
		set(x_arrow,get(menu_settings.background_width));
		dec(x_arrow,get(menu_settings.arrow_right_offset));
		set(y_arrow,get(menu_settings.menu_0_text_y_start));
		inc(y_arrow,get(menu_settings.arrow_upper_offset));
		set(x_line,get(menu_settings.menu_0_parent_x));
		set(y_line,get(menu_settings.menu_0_text_y_start));
		for(set(i,1), i LE group[get(level)].group.count, inc(i),
			txtadd(arrow,'arrow_',get(i));
			set(plugin[%arrow].url,%FIRSTXML%/gui_menu/arrow.png);
			set(plugin[%arrow].parent,get(menu_settings.menu_0_parent));
			set(plugin[%arrow].zorder,5);
			set(plugin[%arrow].keep,true);
			set(plugin[%arrow].visible,true);
			set(plugin[%arrow].handcursor,true);
			set(plugin[%arrow].x,get(x_arrow));
			set(plugin[%arrow].y,get(y_arrow));
			set(plugin[%arrow].align,topleft);
			set(plugin[%arrow].edge,lefttop);
			set(plugin[%arrow].enabled,false);
			inc(y_arrow,get(checkbox_razmak));
		);
	</action>
-->

<!--
	<action name="define_lines">
		txtadd(level,'level_',%1);
		set(x_line,get(menu_settings.menu_0_parent_x));
		set(y_line,get(menu_settings.menu_0_text_y_start));
		for(set(i,0), i LE group[get(level)].group.count, inc(i),
			txtadd(line,'line_',get(i));
			set(plugin[%line].url,%FIRSTXML%/gui_menu/line.png);
			set(plugin[%line].parent,get(menu_settings.menu_0_parent));
			set(plugin[%line].zorder,5);
			set(plugin[%line].keep,true);
			set(plugin[%line].visible,true);
			set(plugin[%line].handcursor,false);
			set(plugin[%line].x,get(x_line));
			set(plugin[%line].y,get(y_line));
			set(plugin[%line].width,get(menu_settings.background_width));
			set(plugin[%line].height,get(menu_settings.line_height));
			set(plugin[%line].align,topleft);
			set(plugin[%line].edge,lefttop);
			set(plugin[%line].alpha,get(menu_settings.line_transparency));
			inc(y_line,get(checkbox_razmak));
		);
	</action>
-->
    
     <action name="botton_on">
        
        set(plugin[botton_overlay].keep,true);
        set(plugin[botton_overlay].visible,true);
        trace(get(scene[get(xml.scene)].title));
        if(scene[get(xml.scene)].title == "1_Living Room" OR scene[get(xml.scene)].title == "7_Living_Room_E" ,loadscene(6_Living Room_D,null,MERGE|KEEPVIEW,BLEND(0.5)),   );
	</action>
    
    <action name="botton_off">
        set(plugin[botton].visible,true);
        set(plugin[botton_overlay].visible,false);
        if(scene[get(xml.scene)].title == "6_Living Room_D",loadscene(scene_7_Living_Room_E,null,MERGE|KEEPVIEW,BLEND(0.5)),   );
	</action>
    
    <action name="botton_2">
        set(plugin[botton_2_overlay].keep,true);
        set(plugin[botton_2_overlay].visible,true);
        if(layer[background_scale].height == 0,tween(layer[background_scale].height,30); tween(layer[background_scale].alpha,1);,tween(layer[background_scale].height,0); tween(layer[background_scale].alpha,0);  );
    </action>
    
    
    <action name="botton_2_off">
        set(plugin[botton_2].visible,true);
        set(plugin[botton_2_overlay].visible,false);        
        if(layer[background_scale].height == 0,tween(layer[background_scale].height,30); tween(layer[background_scale].alpha,1);,tween(layer[background_scale].height,0); tween(layer[background_scale].alpha,0);	 );
    </action>
   
    <action name="botton_3_on">
        switch(fullscreen);
        set(plugin[botton_3_overlay].keep,true);
        set(plugin[botton_3_overlay].visible,true);
    </action>
    
    <action name="botton_3_off">
        switch(fullscreen);
        set(plugin[botton_3].visible,true);
        set(plugin[botton_3_overlay].visible,false);
    </action>
    
    <action name="clean_menu">
		for(set(i,1), i LE menu_settings.menu_max_number_objects, inc(i),txtadd(menu_0,'menu_',get(i));set(plugin[%menu_0].html,);set(plugin[%menu_0].onclick,);set(plugin[%menu_0].handcursor,false);set(plugin[%menu_0].background,false););
		for(set(i,1), i LE menu_settings.menu_max_number_objects, inc(i),txtadd(arrow,'arrow_',get(i));set(plugin[%arrow].visible,false););
		for(set(i,0), i LE menu_settings.menu_max_number_objects, inc(i),txtadd(line,'line_',get(i));set(plugin[%line].visible,false););
	</action>

    <action name="slide_menu_right">
		set(new_x,get(background_x));
		tween(plugin[menu_background].x,0,0.5,linear,set(plugin[btn_menu].visible,false););
        set(plugin[btn_menu].visible,false);
        set(plugin[btn_menu_overlay].visible,true);
	</action>
    
	<action name="slide_menu_left">		
        tween(set[plugin[menu]]);
		set(new_x,get(menu_settings.background_width));mul(new_x,-1);	tween(plugin[menu_background].x,get(new_x),0.5,linear,delayedcall(0.1,set(plugin[btn_menu].visible,true);));
        set(plugin[btn_menu_overlay].visible,false);
        set(plugin[btn_menu].visible,true);
    </action>
    
    <action name="slide_project_info_left">	
	    
        set(new_x,get(info_x));
		tween(plugin[project_info].x,0,0.5,linear,);
        set(plugin[menu_info_overlay].visible,true);
	</action>
	
    <action name="slide_project_info_right">	
        set(new_x,get(info_x));
		set(new_x,get(menu_settings.info_width));mul(new_x,-1);	tween(plugin[project_info].x,get(new_x),0.5,linear,delayedcall(0.1,set(plugin[menu].visible,true);));
        set(plugin[menu_info_overlay].visible,false);
	</action>
    
    
    <action name="slide_caption_left">	
        set(new_x,get(info_x));
		tween(plugin[combo_box].x,0,0.5,linear,);
        set(plugin[logo_overlay].visible,true);
	</action>
    
    <action name="slide_caption_right">	
        set(new_x,get(info_x));
		set(new_x,get(menu_settings.caption_w));mul(new_x,-1);	tween(plugin[combo_box].x,get(new_x),0.5,linear,delayedcall(0.1,set(plugin[menu].visible,true);));
        set(plugin[logo_overlay].visible,false);
	</action>
    
    <action name="slide_omenu_right">
    set(new_x,get(m_x));
	tween(plugin[main_menu].x,0,0.5,linear,set(plugin[main_menu].visible,true););
    set(plugin[frame_option_menu_menu_overlay].visible,true);    
    </action>
    
    
    
    <action name="slide_omenu_left">	
<!--        if(plugin[box1].x , trace(get(x),get(y)); ); -->
        set(new_x,get(m_x));
        set(new_x,get(menu_settings.main_menu_w));mul(new_x,-1);	tween(plugin[main_menu].x,get(new_x),0.5,linear,delayedcall(0.1,set(plugin[main_menu].visible,true);));
        set(plugin[frame_option_menu_menu_overlay].visible,false);
    </action>
    
    
    
    <action name="slide_box_left">	
<!--        if(plugin[box1].x , trace(get(x),get(y)); ); -->
        set(new_x,get(m_x));
        set(new_x,get(menu_settings.m_mobile));mul(new_x,-1);	tween(plugin[box1].x,get(new_x),0.5,linear,delayedcall(0.1,set(plugin[menu].visible,true);));
        set(plugin[menu_overlay].visible,false);
    </action>
    
    <action name="slide_box_right">
    set(new_x,get(m_x));
	tween(plugin[box1].x,0,0.5,linear,set(plugin[menu].visible,true););
    set(plugin[menu_overlay].visible,true);    
    </action>
    
    
    <action name="slide_box1_left">	
<!--        if(plugin[box1].x , trace(get(x),get(y)); ); -->
        set(new_x,get(m_x));
        set(new_x,get(menu_settings.m_width));mul(new_x,-1);	tween(plugin[box1].x,get(new_x),0.5,linear,delayedcall(0.1,set(plugin[menu].visible,true);));
        set(plugin[menu_overlay].visible,false);
    </action>
    
    <action name="slide_box1_right">
    set(new_x,get(m_x));
	tween(plugin[box1].x,0,0.5,linear,set(plugin[menu].visible,true););
    set(plugin[menu_overlay].visible,true);    
    </action>

    <action name="slide_og_left">	
<!--        if(plugin[box1].x , trace(get(x),get(y)); ); -->
        set(new_x,get(m_x));
        set(new_x,get(menu_settings.m_width));mul(new_x,-1);	tween(plugin[og].x,get(new_x),0.5,linear,delayedcall(0.1,set(plugin[og-gru].visible,true);));
        set(plugin[og_gru_overlay].visible,false);
    </action>
    
    <action name="slide_og_right">
    set(new_x,get(m_x));
	tween(plugin[og].x,0,0.5,linear,set(plugin[og-gru].visible,true););
    set(plugin[og_gru_overlay].visible,true);    
    </action>

	<action name="initiate_menu">
<!--		iniciraj_grupu_0();-->
<!--		switch_menu(0);-->
	</action>

	<action name="drag_sidemenu">
        set(new_x,get(background_x));
		tween(plugin[menu_background].x,0,0.5,linear,;);

		if(%1 != dragging,
			copy(drag_currentx, x);			
			copy(drag_layerx, layer[menu_background].x);						
			copy(drag_stagex, mouse.stagex);			
			set(drag_sx, +1);					
			drag_sidemenu(dragging);
		  ,
			if(pressed,
				sub(dx, mouse.stagex, drag_stagex);				
				mul(x_layer, x_button,-1);				
				if(dx GE menu_settings.background_width ,slide_menu_right();
				,
				add(new_layer_x,get(drag_layerx),get(dx));
				set(layer[menu_background].x,get(new_layer_x));
				);
				delayedcall(0, drag_sidemenu(dragging) );
			  );
		  );
	</action>


|</krpano>
