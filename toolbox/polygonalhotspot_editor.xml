<krpano>
	
	<!-- The new hotspots need a style name for the ouput code. -->	
	<phe_settings
		style_name="mypolygonalhotspotstylename"
	/>			  

	
	<!-- the style for your hotspot ..ONLY THE NAME WILL BE USED IN THE OUTPUT CODE!!!! -->	
	<style name="phe_newpoly" fillcolor="0x9fa2f4" fillalpha="0.0" borderwidth="3.0" bordercolor="0xaaaaaa" borderalpha="0.0" onover="tween(fillalpha,0.5);" onout="tween(fillalpha,0.0);" onclick="" ondown.touch="onover(); asyncloop(pressed, onhover(); );" onup.touch="onout();" />
    
    <style name="phe_newpoly_g" fillcolor="0xa7eba4" fillalpha="0.0" borderwidth="3.0" bordercolor="0xaaaaaa" borderalpha="0.0" onover="tween(fillalpha,0.5);" onout="tween(fillalpha,0.0);" onclick="" ondown.touch="onover(); asyncloop(pressed, onhover(); );" onup.touch="onout();" />
	
	<!-- editor button style -->	
	<style name="phe_btn" type="text" align="top" width="-20" height="30" bgroundedge="4" vcenter="true" mipmapping="true" oversampling="2" css="data:css_phebtn" />	
	
	
	<!-- CSS -->	
	<data name="css_phetit">
		font-family:Helvetica; font-size:12px; color:#ffffff; text-align:center; line-height:14px;
	</data>
	<data name="css_phebtn">
		font-family:Helvetica; font-size:10px; color:#222222; text-align:center; line-height:10px;
	</data>
	<data name="css_phe2">
		font-family:Helvetica; font-size:10px; color:#ffffff; text-align:center; line-height:10px;
	</data>
	<data name="css_phehelp">
		font-family:Helvetica; font-size:13px; color:#222222; text-align:left; line-height:13px;
	</data>
	
	
	<!-- the editor -->	
	<layer name="phe_box" type="container" keep="true" parent="layer[tb_container]" visible="false" align="lefttop" x="0" y="30" width="200" height="180" bgcolor="0x333333" bgalpha="1" onloaded="set(phehs, 0);" >
		<layer name="phe_btntit" type="text" enabled="true" handcursor="false" align="top" width="-20" height="40"  y="10" vcenter="true" mipmapping="true" oversampling="2" css="data:css_phetit" bgroundedge="4" bgcolor="0xB69D38" html="POLYGONAL HOTSPOT EDITOR" />
		<layer name="phe_btn1" style="phe_btn" y="60" html="START NEW HOTSPOT" onclick="PheStartdraw();" />
		<layer name="phe_btn3" type="text" enabled="true" handcursor="false" align="top" width="-20" height="30" bgroundedge="4" vcenter="true" mipmapping="true" oversampling="2" css="data:css_phe2" bg="false"  y="100" html="PRESS SPACE TO FINISH HOTSPOT" />	
		<layer name="phe_btn2" style="phe_btn" y="140" html="SHOW CODE or PRESS P" onclick="set(phedrawing, false);PhePrint();" />
	</layer>	
	


	<!--
	 ***************** THE ENGINE ***********
	-->
		<!-- 
	if(keycode == 80, Print()); 
	if(keycode == 81, startdraw());
	-->
	<events 
		onkeydown="
				   if(keycode == 32, PheStopdraw(get(phehsname)));   
				   "
		onclick="if(phedrawing == true, PheAddpoint());"
	/>

	<action name="PheStartdraw" >
		inc(phehs);
		set(phedrawing, true);
		txtadd(phehsname, 'hs', get(phehs));

		addhotspot(get(phehsname));
		hotspot[get(phehsname)].loadstyle(phe_newpoly);
		set(hotspot[get(phehsname)].enabled, false);
		set(pheid, 0);
	</action>

	<action name="PheStopdraw">
		set(phedrawing, false);
		PheMakeCode(%1);
	</action>

	<action name="PheAddpoint">
		screentosphere(mouse.x, mouse.y, toh, tov);
		set(hotspot[get(phehsname)],point[get(pheid)].ath=get(toh),point[get(pheid)].atv=get(tov));
		if(_phepoints,
			set(_phepoints, calc:_phepoints + '&#xA;&#09;' + data[html_point].content + 'ath="' + toh + '" atv="' + tov + '"' + data[html_/exit].content);
		,
			set(_phepoints, calc:'&#09;' + data[html_point].content + 'ath="' + toh + '" atv="' + tov + '"' + data[html_/exit].content);
		);
		updatescreen();
		PheMouseMove();
		inc(pheid);
	</action>

	<action name="PheMouseMove">
		screentosphere(mouse.x, mouse.y, toh, tov);
		set(hotspot[get(phehsname)].point[get(pheid)].ath, get(toh));
		set(hotspot[get(phehsname)].point[get(pheid)].atv, get(tov));
		updatescreen();
		if(phedrawing == true, delayedcall(0.0, PheMouseMove()));
	</action>

	<action name="PheMakeCode">
		set(_phestyle, calc:phe_settings.style_name);

		if(_phetoprint,
			set(_phetoprint, calc:_phetoprint + '&#xA;&#xA;' + data[html_hotspot].content + ' name="%1" style="' + _phestyle + '"' + data[html_/close].content + '&#xA;' + _phepoints + '&#xA;' + data[html_hotspotend].content);
		,
			set(_phetoprint, calc:'&#xA;' + data[html_hotspot].content + ' name="%1" style="' + _phestyle + '"' + data[html_/close].content + '&#xA;' + _phepoints + '&#xA;' + data[html_hotspotend].content);
		);

		set(hotspot[%1].enabled, true);
		set(_phepoints, );
	</action>


	<action name="PheExit">
		delete(_phetoprint);set(pheid, 0);set(phedrawing, false);
	</action>

	<data name="html_point"><![CDATA[<point ]]></data>
	<data name="html_/close"><![CDATA[ >]]></data>
	<data name="html_/exit"><![CDATA[ />]]></data>	
	<data name="html_hotspot"><![CDATA[<hotspot ]]></data>
	<data name="html_hotspotend"><![CDATA[</hotspot>]]></data>
	<data name="html_quoteopen"><![CDATA[<!-- ]]></data>
	<data name="html_quoteend"><![CDATA[ -->]]></data>	

	<action name="PhePrint">
		if(_phetoprint,
			trace(_phetoprint);
			showlog();
		);
	</action>
</krpano>	